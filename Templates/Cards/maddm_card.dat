#            ====================================================
#            |                    MadDM v3.0                     |
#            ====================================================
#
#                #########
#             ###\\####//#####              Launchpad:  launchpad.net/maddm
#           ######\\##//########
#          ########\\//###########
#         #########//\\############
#        #########//##\\############                   arXiv:1308.4955
#       ########//#####\\###########                   arXiv:1505.04190
#       ######################### ## ___________________________________________
#       ####################### 0  #  _     _               _  _____   _     _
#       #############   0  ###    ## | \   / |   ___    ___|| | ___ \ | \   / |
#       ##############    #########  ||\\ //|| / __ |  / __ | ||   || ||\\ //||
#        ##########################  ||  V  || ||__||  ||__|| ||___|| ||  V  ||
#         ###################   ##   ||     || \_____\ \____| |_____/ ||     ||
#          ############       ###    ___________________________________________
#           ##########    ######
#             ################
#                 ########
#
###################################################################################
#
#   RELIC DENSITY
#
###################################################################################

#flag to use the canonical calculation or the coupled relic density calculation
  %(relic_canonical)s       = relic_canonical   
#flags for calculating an array of taacs values or calculate them on the spot
  %(calc_taacs_ann_array)s       = calc_taacs_ann_array 
  %(calc_taacs_dm2dm_array)s       = calc_taacs_dm2dm_array
  %(calc_taacs_scattering_array)s       = calc_taacs_scattering_array

# precision of the ODE integrator which solves for relic density.
  %(eps_ode)s       = eps_ode

# use an approximation for the decoupling temperature in the relic density calc?
# if xd_approx = .false. use "step back" parameters [x_start,x_end,dx_step] for the ODE integrator
# (see manual for more details). Slower, but more accurate.
  %(xd_approx)s       = xd_approx

###################################################################################
#
# Direct(ional) Detection 
#
###################################################################################

# choose the target material (type "help material" for more target code)
   %(material)s         = material ! 1: Xenon, 2: Germanium, 3: Silicon, ...

# galactic halo DM constants (for direct detection & capture rate by sun/earth)
   %(vmp)s     = vMP  ! The most probable WIMP velocity v_0 (km/s)
   %(vescape)s     = vescape  ! The escape velocity of WIMPS in the Halo (km/s)
   %(rhodm)s       = rhoDM   ! The density of WIMPs in our local Universe (GeV/c^2/cm^-3)

# choose the size of the detector
   %(detector_size)s    = detector_size  ! For 1 ton = 1000 kg detector
   %(en_threshold)s       = En_threshold     ! in keVnr

# choose the energy resolution coefficient and range 
   %(lambd)s       = lambd ! lambda (sigma_E = lambda*sqrt(E))
   %(sig_theta)s       = sig_theta ! angular resolution
   %(en_min)s       = En_min          ! minimum recoil Energy
   %(en_max)s     = En_max          ! maximum recoil energy
   %(energy_bins)s       = Energy_bins     ! Number of Energy bins
   %(cos_min)s      = cos_min         ! Minimum cosine of recoil angle
   %(cos_max)s       = cos_max         ! Maximum cosine of recoil angle
   %(cos_theta_bins)s        = cos_theta_bins  ! Number of cosine angle bins

# running time of the detector
   %(day_min)s       = day_min         ! 1st day of observation.
   %(day_max)s     = day_max         ! 1 year later.
   %(day_bins)s        = day_bins        ! Number of time bins

# Turn on detector smearing or not (both energy and angle)
   %(smearing)s     = smearing

# Nuclear form factor can be customised via parameters:
#  - scalar: SPu, SPd, SPs, SPg // SNu, SNd, SNs, SNg 
#  - vector: VPu, VPd // VNu, VNd
#  - axial vector: AVPu, AVPd, AVPs // AVNu, AVNd, AVNs
#  - Sigma(mu,nu): SigPu, SigPd, SigPs // SigNu, SigNd, SigNs

###################################################################################
#
# InDirect Detection 
#
###################################################################################

# Methode of computation (affects speed and precision)
   %(sigmav_method)s    = sigmav_method ! inclusive, madevent, reshuffling
   %(indirect_flux_source_method)s   = indirect_flux_source_method ! pythia8, PPPC4DMID or PPPC4DMID_ew 
   %(indirect_flux_earth_method)s    =  indirect_flux_earth_method ! dragon or PPPC4DMID_ep

# velocity in halo
   %(vave_indirect)s   = vave_indirect  ! average velocity of DM in halos in natural units (e.g. 1E-3 for our galaxy, 1E-5 for dSph galaxies)

###################################################################################
#
# GLOBAL PARAMETER
#
###################################################################################

#flag to limit the Auto of the param_card to only consider two body decays.
 %(only_two_body_decays)s = only_two_body_decays

 %(save_output)s       = save_output ! choose off , all , spectra to store output in scan mode
# Note that integration precision parameters can be update via
# ngrid_init, nres_points, eps_wij, iter_wij
# those impact relic density and indirect detection (for sigmav_method=inclusive)

###################################################################################
#
#  Need to have more parameter? You can display all the hidden ones via the command
#   update to_full
#
###################################################################################