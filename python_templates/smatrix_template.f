C------------------------------------------------------------------------c
      subroutine getfsmasses_ann(pmass, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine which is dynamically generated by the MadDM python     c
c  codes reads through the pmass.inc files to get the external particle   c
c  masses for the annihilation processes.                                 c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      
c input parameters
      integer i, j, k

c
      %(pmass_ann)s

      return
      end



c-------------------------------------------------------------------------c
      subroutine getfsmasses_dm2dm(pmass, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine which is dynamically generated by the MadDM python     c
c  codes reads through the pmass.inc files to get the external particle   c
c  masses for the DM -> DM processes.                                     c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      
c input parameters
      integer i, j, k

#PMASS_MADDM2 --- generates series of if-then-else to read appropriate final state masses
      %(pmass_dm2dm)s

      return
      end



c-------------------------------------------------------------------------c
      subroutine getfsmasses_scattering(pmass, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine which is dynamically generated by the MadDM python     c
c  codes reads through the pmass.inc files to get the external particle   c
c  masses for the DM/SM scattering processes.                             c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      
c input parameters
      integer i, j, k

#PMASS_MADDM3 --- generates series of if-then-else to read appropriate final state masses
      %(pmass_scattering)s

      return
      end




c-------------------------------------------------------------------------c
      function smatrix_ann(p_ext, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine is generated dynamically by MadDM python scripts that  c
c  are set up to call the individual matrix element subroutines as they   c
c  are generated by MadGraph.                                             c
c                                                                         c
c  This function returns the smatrix value for an individual              c
c  annihlation process.                                                   c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      double precision smatrix
c input parameters
      double precision p_ext(0:3,4)
      integer i, j, k

#SMATRIX_MADDM1 --- generates series of if-then-else statements to call appropriate smatrix
      %(smatrix_ann)s

      smatrix_ann = smatrix
      return
      end



c-------------------------------------------------------------------------c
      function smatrix_dm2dm(p_ext, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine is generated dynamically by MadDM python scripts that  c
c  are set up to call the individual matrix element subroutines as they   c
c  are generated by MadGraph.                                             c
c                                                                         c
c  This function returns the smatrix value for an idividual DM -> DM      c
c  process.                                                               c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      double precision smatrix
c input parameters
      double precision p_ext(0:3,4)
      integer i, j, k


#SMATRIX_MADDM2 --- generates series of if-then-else statements to call appropriate smatrix
      %(smatrix_dm2dm)s

      smatrix_dm2dm = smatrix
      return
      end



c-------------------------------------------------------------------------c
      function smatrix_scattering(p_ext, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine is generated dynamically by MadDM python scripts that  c
c  are set up to call the individual matrix element subroutines as they   c
c  are generated by MadGraph.                                             c
c                                                                         c
c  This function returns the smatrix value for an indiviudual DM/SM       c
c  scattering process.                                                    c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      double precision smatrix
c input parameters
      double precision p_ext(0:3,4)
      integer i, j, k


#SMATRIX_MADDM3 --- generates series of if-then-else statements to call appropriate smatrix
      %(smatrix_scattering)s

      smatrix_scattering = smatrix
      return
      end

c-------------------------------------------------------------------------c
      function smatrix_dd(p_ext, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine is generated dynamically by MadDM python scripts that  c
c  are set up to call the individual matrix element subroutines as they   c
c  are generated by MadGraph.                                             c
c                                                                         c
c  This function returns the smatrix value for an indiviudual DM/SM       c
c  scattering process relevant for direct detection.                      c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      double precision smatrix
c input parameters
      double precision p_ext(0:3,4)
      integer i, j, k

#SMATRIX_MADDM_DD --- generates series of if-then-else statements to call appropriate smatrix
      %(smatrix_dd)s

      smatrix_dd = smatrix
      return
      end

c-------------------------------------------------------------------------c
      function smatrix_dd_eff(p_ext, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine is generated dynamically by MadDM python scripts that  c
c  are set up to call the individual matrix element subroutines as they   c
c  are generated by MadGraph.                                             c
c                                                                         c
c  This function returns the smatrix value for an indiviudual DM/SM       c
c  scattering process in the effective operator framework                 c
c  relevant for direct detection.                                         c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      double precision smatrix
c input parameters
      double precision p_ext(0:3,4)
      integer i, j, k

#SMATRIX_MADDM_EFF_DD --- generates series of if-then-else statements to call appropriate smatrix
      %(smatrix_dd_eff)s

      smatrix_dd_eff = smatrix
      return
      end

c-------------------------------------------------------------------------c
      function smatrix_dd_tot(p_ext, i, j, k)
c-------------------------------------------------------------------------c
c                                                                         c
c  This subroutine is generated dynamically by MadDM python scripts that  c
c  are set up to call the individual matrix element subroutines as they   c
c  are generated by MadGraph.                                             c
c                                                                         c
c  This function returns the smatrix value for an indiviudual DM/SM       c
c  scattering process for the effective + full lagrangian                 c
c  relevant for direct detection.                                         c
c                                                                         c
c-------------------------------------------------------------------------c
      implicit none
      include 'maddm.inc'
      include 'coupl.inc'
      double precision smatrix
c input parameters
      double precision p_ext(0:3,4)
      integer i, j, k

#SMATRIX_MADDM_TOT_DD --- generates series of if-then-else statements to call appropriate smatrix
      %(smatrix_dd_tot)s

      smatrix_dd_tot = smatrix
      return
      end
